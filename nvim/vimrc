call plug#begin('~/.vim/plugged')
Plug 'https://github.com/scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'https://github.com/preservim/nerdcommenter'
Plug 'itchyny/lightline.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'https://github.com/junegunn/vim-easy-align'
Plug 'https://github.com/junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'https://github.com/junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'https://github.com/bfrg/vim-cpp-modern'
Plug 'https://github.com/derekwyatt/vim-fswitch'
Plug 'https://github.com/cdelledonne/vim-cmake'
Plug 'https://github.com/adelarsq/vim-matchit'
Plug 'frazrepo/vim-rainbow'
Plug 'https://github.com/airblade/vim-gitgutter.git'
Plug 'https://github.com/tpope/vim-fugitive.git'
Plug 'ThePrimeagen/git-worktree.nvim'
Plug 'antoinemadec/FixCursorHold.nvim'
Plug 'alepez/vim-gtest'
Plug 'majutsushi/tagbar'
Plug 'https://github.com/puremourning/vimspector'
Plug 'alvan/vim-closetag'
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-file-browser.nvim'
Plug 'nvim-telescope/telescope-fzy-native.nvim'
Plug 'https://github.com/Asheq/close-buffers.vim'
Plug 'szw/vim-maximizer'
Plug 'https://github.com/vim-scripts/DoxygenToolkit.vim'
Plug 'https://github.com/rhysd/vim-clang-format'
Plug 'https://github.com/honza/vim-snippets'
Plug 'https://github.com/SirVer/ultisnips'
"Plug 'https://github.com/vim-scripts/a.vim'
"Plug 'https://github.com/tenfyzhong/vim-gencode-cpp'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'nvim-treesitter/playground'
Plug 'xiyaowong/nvim-transparent'
Plug 'github/copilot.vim'
call plug#end()

" lua modules
lua require("tomas")

" Theme
colorscheme dracula
" Enables transparent background
" let g:dracula_colorterm = 0

" Leader
let mapleader=" "

syntax enable
filetype plugin indent on

set autoread
set laststatus=2
set updatetime=200
set timeoutlen=700
set number
set ruler

" sane text files
set fileformat=unix
set encoding=utf-8
set fileencoding=utf-8

" Set Tabs
set tabstop=2
set softtabstop=2
set shiftwidth=2
set smarttab
set expandtab

:map <F4> :nohl<CR>

" Edit vimr configuration file
nnoremap <Leader>vce :e $MYVIMRC<CR>
" " Reload vimr configuration file
nnoremap <Leader>vcr :source ~/.config/nvim/init.vim<CR>

" Save on Ctrl-S
nmap <c-s> :wa<CR>
imap <c-s> <Esc>:wa<CR>a

" copy, cut and paste
vmap <C-c> "+y
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <ESC>"+pa

" word movement
imap <S-Left> <Esc>bi
nmap <S-Left> b
imap <S-Right> <Esc><Right>wi
nmap <S-Right> w

" Careful with Tab remapping - the default jump shortcut stops working
" indent/unindent with tab/shift-tab
" nmap <Tab> >>
" nmap <S-tab> <<
" imap <S-Tab> <Esc><<i
" vmap <Tab> >gv
" vmap <S-Tab> <gv

" marks
noremap <Leader>m :marks<CR>

"--------------------------------------------------------------------------
" QFList mappings
"--------------------------------------------------------------------------

nnoremap <A-[> :cprev<cr>
nnoremap <A-]> :cnext<cr>
nnoremap <A-o> :copen<cr>
nnoremap <A-O> :cclose<cr>
nnoremap <A-f> :cfirst<cr>

"--------------------------------------------------------------------------
" Splits and Tabbed Files
"--------------------------------------------------------------------------
set splitbelow splitright

" Remap splits navigation to just CTRL + hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Make adjusing split sizes a bit more friendly
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>

" Change 2 split windows from vert to horiz or horiz to vert
map <Leader>th <C-w>t<C-w>H
map <Leader>tk <C-w>t<C-w>K

